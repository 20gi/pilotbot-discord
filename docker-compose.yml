version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: discord-bot-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - discord-bot-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "999:999"

  discord-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: discord-bot-control
    restart: unless-stopped
    ports:
      - "127.0.0.1:5000:5000"  # Bind only to localhost
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - REDIRECT_URI=${REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=production
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - ./config.json:/app/config.json:ro
      - ./logs:/app/logs
      - /etc/ssl/certs:/etc/ssl/certs:ro  # For HTTPS certificate validation
    depends_on:
      - redis
    networks:
      - discord-bot-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE  # Only if binding to port < 1024
    read_only: true
    tmpfs:
      - /tmp
      - /app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    container_name: discord-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - discord-bot
    networks:
      - discord-bot-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID

volumes:
  redis_data:
    driver: local

networks:
  discord-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16